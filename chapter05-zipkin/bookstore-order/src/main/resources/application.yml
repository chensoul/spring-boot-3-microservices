server.port: 8082
server.shutdown: graceful
server.forward-headers-strategy: framework

spring.application.name: bookstore-order
spring.mvc.problemdetails.enabled: true

order.product-url: http://localhost:8083
order.order-event-exchange: order-exchange
order.new-order-queue: new-order
order.delivered-order-queue: delivered-order
order.cancelled-order-queue: cancelled-order
order.error-order-queue: error-order
order.publish-order-events-job-cron: "*/5 * * * * *"
order.new-order-job-cron: "*/10 * * * * *"

management.endpoints.web.exposure.include: "*"
management.metrics.tags.application: "${spring.application.name}"
management.tracing.sampling.probability: 1.0
management.zipkin.tracing.endpoint: http://localhost:9411/api/v2/spans

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9000

spring.datasource.url: jdbc:postgresql://localhost:15432/postgres
spring.datasource.username: postgres
spring.datasource.password: postgres
spring.jpa.open-in-view: false
spring.jpa.show-sql: true

spring:
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: orderCreatedEvent:com.chensoul.bookstore.api.order.OrderCreatedEvent,orderDeliveredEvent:com.chensoul.bookstore.api.order.OrderDeliveredEvent,orderCancelledEvent:com.chensoul.bookstore.api.order.OrderCancelledEvent,orderErrorEvent:com.chensoul.bookstore.api.order.OrderErrorEvent


resilience4j.retry.backends.bookstore-product.max-attempts: 2
resilience4j.retry.backends.bookstore-product.wait-duration: 1s
resilience4j.circuitbreaker.backends.bookstore-product.sliding-window-type: COUNT_BASED
resilience4j.circuitbreaker.backends.bookstore-product.sliding-window-size: 6
resilience4j.circuitbreaker.backends.bookstore-product.minimum-number-of-calls: 4
resilience4j.circuitbreaker.backends.bookstore-product.wait-duration-in-open-state: 20s
resilience4j.circuitbreaker.backends.bookstore-product.permitted-number-of-calls-in-half-open-state: 2
resilience4j.circuitbreaker.backends.bookstore-product.failure-rate-threshold: 50


---
spring.config.activate.on-profile: docker

order.product-url: http://bookstore-product:8083

spring.security.oauth2.resourceserver.jwt.issuer-uri: http://spring-authorization-server:9000

spring.datasource.url: jdbc:postgresql://postgres-order:5432/postgres

spring.data.mongodb.host: mongodb

management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans

