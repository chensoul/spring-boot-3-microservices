server.port: 8030

spring.application.name: notification-service

spring:
  data:
    mongodb:
      username: user
      password: pass
      host: localhost
      port: 27017
      database: ecommerce
      authentication-database: admin
  mail:
    host: localhost
    port: 1025
    username: user
    password: pass
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: notificationGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:com.chensoul.ecommerce.order.OrderConfirmation,paymentConfirmation:com.chensoul.ecommerce.payment.PaymentConfirmation


---
spring.config.activate.on-profile: docker

server.port: 8080

spring.data.mongodb.host: mongodb

spring.mail.host: maildev

spring.kafka.consumer.bootstrap-servers: kafka:9092
